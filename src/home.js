import React, { useState,useEffect } from "react";
import NEW from "./NEW";
import "./css/home.css";
import { RiAccountPinCircleFill } from "react-icons/ri";
import axios from "axios";
import LineGraph from "./Chartdata/Line";
import OverSummary from "./ProductSummary/OverSummary";

const Home = () => {
  const [ProdNo , setProNo] = useState (0)
  const [msProfitMade, setmsProfitMade] = useState(0)
  const [bsProfit, setbsProfit] = useState(0)
  const [Balance, setBalance] = useState(0);
  const handleProdNo = async()=>{
    try{
      const response = await axios.get("http://localhost:8081/FetchProduct/getProductSold")
      const {TotalProductExported } = response.data
      setProNo(TotalProductExported)

    }catch(err){
      console.error({message:"Failed to Receive data"})
    }
  }
  const handlebsProfitMadeTd  = async ()=>{
    try{
      const response = await axios.get("http://localhost:8081/FetchProduct/profitBulksale")
      const{TotalProfit}= response.data
      setbsProfit(TotalProfit)
    }catch(err){
      return console.error({message:"Failed to Connect"})
    }
  }
  const handleProfitMadeTd = async()=>{
    try{
      const response =  await axios.get("http://localhost:8081/FetchProduct/ProfitGenerated")
      const { TotalProfitTd} =response.data;
      setmsProfitMade(TotalProfitTd);

    }
    catch(err){
  return  console.error({message:"Server Failed " , err})
    
    }
  }
  const handleNetworth = async() =>{
    try{
      const Networth = await axios.get("http://localhost:8081/FetchProduct/Networth")
      const TotalNetworth = Networth.data.TotalNetworth
      console.log(TotalNetworth);
  
      setBalance(TotalNetworth)
    }catch(err){
      console.error({message:"Failed to Receive the data",err})
    }
 
  }
  useEffect(() => {
    handleNetworth();
    handleProfitMadeTd();
    handlebsProfitMadeTd();
    handleProdNo();
    const TimeInterval = setInterval(() =>{
      handleNetworth();
      handleProfitMadeTd();
      handlebsProfitMadeTd();
      handleProdNo();

    },3000)
    return () => clearInterval(TimeInterval)
  },[])



  return (
    <div className="background-home">
      <NEW />
    
      <h3 className="Home-title">
        <RiAccountPinCircleFill
          className="icon-account"
        
        />
      <span className="letBlurIn">Company-Networth--TZS {Balance}.sh</span> 
      </h3>
      
      <div className="items">
        <h2 className="item-1">
          <h3 className="letBlurIn">{bsProfit}.sh</h3>
          <h4 className="letBlurIn">Profit Generated By BulksalesProduct</h4>
        </h2>

        <h2 className="item-1">
          <h3 className="letBlurIn">{msProfitMade}.sh</h3>
          <h4 className="letBlurIn"> Profit Generated By PackageProduct </h4>
        </h2>

        <h2 className="item-1">
          <h3 className="letBlurIn">{ProdNo}</h3>
          <h4 className="letBlurIn">Number Of Product-sold Today</h4>
        </h2>
      </div>
     <div>
       <OverSummary/>
     </div>
      <div className="Line-container">
        <LineGraph/>
      </div>
      
    </div>
  );
};

export default Home;
